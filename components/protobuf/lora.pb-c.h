/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: lora.proto */

#ifndef PROTOBUF_C_lora_2eproto__INCLUDED
#define PROTOBUF_C_lora_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct MainValveFrame MainValveFrame;
typedef struct VentValveFrame VentValveFrame;
typedef struct LoRaFrame LoRaFrame;


/* --- enums --- */


/* --- messages --- */

struct  MainValveFrame
{
  ProtobufCMessage base;
  float thermocuple1;
  float thermocuple2;
  float battery;
};
#define MAIN_VALVE_FRAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&main_valve_frame__descriptor) \
    , 0, 0, 0 }


struct  VentValveFrame
{
  ProtobufCMessage base;
  uint32_t thermistor1;
  uint32_t thermistor2;
  float tankpressure;
  float batteryvoltage;
};
#define VENT_VALVE_FRAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&vent_valve_frame__descriptor) \
    , 0, 0, 0, 0 }


struct  LoRaFrame
{
  ProtobufCMessage base;
  MainValveFrame *mainvalve;
  VentValveFrame *ventvalve;
  uint32_t uptime;
  uint32_t state;
};
#define LO_RA_FRAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lo_ra_frame__descriptor) \
    , NULL, NULL, 0, 0 }


/* MainValveFrame methods */
void   main_valve_frame__init
                     (MainValveFrame         *message);
size_t main_valve_frame__get_packed_size
                     (const MainValveFrame   *message);
size_t main_valve_frame__pack
                     (const MainValveFrame   *message,
                      uint8_t             *out);
size_t main_valve_frame__pack_to_buffer
                     (const MainValveFrame   *message,
                      ProtobufCBuffer     *buffer);
MainValveFrame *
       main_valve_frame__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   main_valve_frame__free_unpacked
                     (MainValveFrame *message,
                      ProtobufCAllocator *allocator);
/* VentValveFrame methods */
void   vent_valve_frame__init
                     (VentValveFrame         *message);
size_t vent_valve_frame__get_packed_size
                     (const VentValveFrame   *message);
size_t vent_valve_frame__pack
                     (const VentValveFrame   *message,
                      uint8_t             *out);
size_t vent_valve_frame__pack_to_buffer
                     (const VentValveFrame   *message,
                      ProtobufCBuffer     *buffer);
VentValveFrame *
       vent_valve_frame__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   vent_valve_frame__free_unpacked
                     (VentValveFrame *message,
                      ProtobufCAllocator *allocator);
/* LoRaFrame methods */
void   lo_ra_frame__init
                     (LoRaFrame         *message);
size_t lo_ra_frame__get_packed_size
                     (const LoRaFrame   *message);
size_t lo_ra_frame__pack
                     (const LoRaFrame   *message,
                      uint8_t             *out);
size_t lo_ra_frame__pack_to_buffer
                     (const LoRaFrame   *message,
                      ProtobufCBuffer     *buffer);
LoRaFrame *
       lo_ra_frame__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lo_ra_frame__free_unpacked
                     (LoRaFrame *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MainValveFrame_Closure)
                 (const MainValveFrame *message,
                  void *closure_data);
typedef void (*VentValveFrame_Closure)
                 (const VentValveFrame *message,
                  void *closure_data);
typedef void (*LoRaFrame_Closure)
                 (const LoRaFrame *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor main_valve_frame__descriptor;
extern const ProtobufCMessageDescriptor vent_valve_frame__descriptor;
extern const ProtobufCMessageDescriptor lo_ra_frame__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_lora_2eproto__INCLUDED */
