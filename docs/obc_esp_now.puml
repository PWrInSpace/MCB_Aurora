@startuml

skinparam NoteBackgroundColor white

participant program as "program"
participant ena_api as "ena_api"
participant ena_main as "ena_main_loop"
participant ena_rx as "ena_rx_interrupt"
participant ena_tx as "ena_tx_interrupt"
participant esp_now as "esp_now"

== Transmit ==
group Send data request
program -> ena_api: ENA_send()
ena_api -> ena_main: add_to_send_queue
group return
program <- ena_main: ESP_OK
else
program <- ena_main: ESP_FAIL
end
end

... Waiting for end of previous transmition ...
rnote over ena_main
acquitre tranmition lock
end rnote

group loop
ena_main -> esp_now: esp_now_send()
alt true
ena_main <- ena_tx: status OK
rnote over ena_main
relase  transmition lock
end rnote
rnote over ena_main
brake loop
end rnote
else false
ena_main <- ena_tx: status_fail

group return [send_retakes <= send_counter]
rnote over ena_main
relase  transmition lock
end rnote
rnote over ena_main
brake loop
end rnote
program <- ena_main: raise transmition error
end
end

@enduml